{"ast":null,"code":"// Onboarding state management for React app\n// In production, this would be handled by the backend API\n\nexport const ONBOARDING_STEPS = {\n  CONNECT_GOOGLE: 'connect',\n  SELECT_LOCATION: 'location',\n  SET_ALERTS: 'alerts',\n  COMPLETE: 'app'\n};\nexport const getOnboardingProgress = () => {\n  if (typeof window === 'undefined') return {};\n  return {\n    hasConnectedGoogle: localStorage.getItem('onboarding_google') === 'true',\n    hasSelectedLocation: localStorage.getItem('onboarding_location') === 'true',\n    hasSetAlerts: localStorage.getItem('onboarding_alerts') === 'true'\n  };\n};\nexport const getNextOnboardingPath = () => {\n  const progress = getOnboardingProgress();\n  if (!progress.hasConnectedGoogle) {\n    return '/onboarding/connect';\n  }\n  if (!progress.hasSelectedLocation) {\n    return '/onboarding/location';\n  }\n  if (!progress.hasSetAlerts) {\n    return '/onboarding/alerts';\n  }\n  return '/app';\n};\nexport const markOnboardingStepComplete = step => {\n  if (typeof window === 'undefined') return;\n  switch (step) {\n    case ONBOARDING_STEPS.CONNECT_GOOGLE:\n      localStorage.setItem('onboarding_google', 'true');\n      break;\n    case ONBOARDING_STEPS.SELECT_LOCATION:\n      localStorage.setItem('onboarding_location', 'true');\n      break;\n    case ONBOARDING_STEPS.SET_ALERTS:\n      localStorage.setItem('onboarding_alerts', 'true');\n      break;\n  }\n};\nexport const resetOnboardingProgress = () => {\n  if (typeof window === 'undefined') return;\n  localStorage.removeItem('onboarding_google');\n  localStorage.removeItem('onboarding_location');\n  localStorage.removeItem('onboarding_alerts');\n};","map":{"version":3,"names":["ONBOARDING_STEPS","CONNECT_GOOGLE","SELECT_LOCATION","SET_ALERTS","COMPLETE","getOnboardingProgress","window","hasConnectedGoogle","localStorage","getItem","hasSelectedLocation","hasSetAlerts","getNextOnboardingPath","progress","markOnboardingStepComplete","step","setItem","resetOnboardingProgress","removeItem"],"sources":["C:/Users/Qlirim Elezi/Desktop/ReviewPilot/ReviewPilot/frontend/src/onboarding.js"],"sourcesContent":["// Onboarding state management for React app\r\n// In production, this would be handled by the backend API\r\n\r\nexport const ONBOARDING_STEPS = {\r\n  CONNECT_GOOGLE: 'connect',\r\n  SELECT_LOCATION: 'location', \r\n  SET_ALERTS: 'alerts',\r\n  COMPLETE: 'app'\r\n};\r\n\r\nexport const getOnboardingProgress = () => {\r\n  if (typeof window === 'undefined') return {};\r\n  \r\n  return {\r\n    hasConnectedGoogle: localStorage.getItem('onboarding_google') === 'true',\r\n    hasSelectedLocation: localStorage.getItem('onboarding_location') === 'true',\r\n    hasSetAlerts: localStorage.getItem('onboarding_alerts') === 'true'\r\n  };\r\n};\r\n\r\nexport const getNextOnboardingPath = () => {\r\n  const progress = getOnboardingProgress();\r\n  \r\n  if (!progress.hasConnectedGoogle) {\r\n    return '/onboarding/connect';\r\n  }\r\n  \r\n  if (!progress.hasSelectedLocation) {\r\n    return '/onboarding/location';\r\n  }\r\n  \r\n  if (!progress.hasSetAlerts) {\r\n    return '/onboarding/alerts';\r\n  }\r\n  \r\n  return '/app';\r\n};\r\n\r\nexport const markOnboardingStepComplete = (step) => {\r\n  if (typeof window === 'undefined') return;\r\n  \r\n  switch (step) {\r\n    case ONBOARDING_STEPS.CONNECT_GOOGLE:\r\n      localStorage.setItem('onboarding_google', 'true');\r\n      break;\r\n    case ONBOARDING_STEPS.SELECT_LOCATION:\r\n      localStorage.setItem('onboarding_location', 'true');\r\n      break;\r\n    case ONBOARDING_STEPS.SET_ALERTS:\r\n      localStorage.setItem('onboarding_alerts', 'true');\r\n      break;\r\n  }\r\n};\r\n\r\nexport const resetOnboardingProgress = () => {\r\n  if (typeof window === 'undefined') return;\r\n  \r\n  localStorage.removeItem('onboarding_google');\r\n  localStorage.removeItem('onboarding_location');\r\n  localStorage.removeItem('onboarding_alerts');\r\n};\r\n"],"mappings":"AAAA;AACA;;AAEA,OAAO,MAAMA,gBAAgB,GAAG;EAC9BC,cAAc,EAAE,SAAS;EACzBC,eAAe,EAAE,UAAU;EAC3BC,UAAU,EAAE,QAAQ;EACpBC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EACzC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE,OAAO,CAAC,CAAC;EAE5C,OAAO;IACLC,kBAAkB,EAAEC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,KAAK,MAAM;IACxEC,mBAAmB,EAAEF,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,KAAK,MAAM;IAC3EE,YAAY,EAAEH,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,KAAK;EAC9D,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,qBAAqB,GAAGA,CAAA,KAAM;EACzC,MAAMC,QAAQ,GAAGR,qBAAqB,CAAC,CAAC;EAExC,IAAI,CAACQ,QAAQ,CAACN,kBAAkB,EAAE;IAChC,OAAO,qBAAqB;EAC9B;EAEA,IAAI,CAACM,QAAQ,CAACH,mBAAmB,EAAE;IACjC,OAAO,sBAAsB;EAC/B;EAEA,IAAI,CAACG,QAAQ,CAACF,YAAY,EAAE;IAC1B,OAAO,oBAAoB;EAC7B;EAEA,OAAO,MAAM;AACf,CAAC;AAED,OAAO,MAAMG,0BAA0B,GAAIC,IAAI,IAAK;EAClD,IAAI,OAAOT,MAAM,KAAK,WAAW,EAAE;EAEnC,QAAQS,IAAI;IACV,KAAKf,gBAAgB,CAACC,cAAc;MAClCO,YAAY,CAACQ,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC;MACjD;IACF,KAAKhB,gBAAgB,CAACE,eAAe;MACnCM,YAAY,CAACQ,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;MACnD;IACF,KAAKhB,gBAAgB,CAACG,UAAU;MAC9BK,YAAY,CAACQ,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC;MACjD;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAC3C,IAAI,OAAOX,MAAM,KAAK,WAAW,EAAE;EAEnCE,YAAY,CAACU,UAAU,CAAC,mBAAmB,CAAC;EAC5CV,YAAY,CAACU,UAAU,CAAC,qBAAqB,CAAC;EAC9CV,YAAY,CAACU,UAAU,CAAC,mBAAmB,CAAC;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}